#!/bin/sh
### BEGIN INIT INFO
# Provides:          poker-terminator
# Required-Start:    $local_fs $network $syslog $named
# Required-Stop:     $local_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the poker-terminator
# Description:       starts poker-terminator using start-stop-daemon
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin

COFFEE=/usr/lib/poker-terminator/node_modules/.bin/coffee
DAEMON=/usr/lib/poker-terminator/server.coffee
# CONFIG=/etc/pokerterminator.yaml
DAEMON_NAME=poker-terminator

# Include poker-terminator defaults if available
if [ -f /etc/default/poker-terminator ]; then
    . /etc/default/poker-terminator
fi

test -x $COFFEE || exit 1

. /lib/lsb/init-functions

PID=/var/run/$DAEMON_NAME.pid

test_config() {
    return 0 # dummy
}

start() {
    start-stop-daemon --start --background \
        --make-pidfile --pidfile $PID \
        --exec $COFFEE -- $DAEMON
}

stop() {
    start-stop-daemon --stop --quiet --pidfile $PID
}

reload() {
    start-stop-daemon --stop --signal HUP --quiet --pidfile $PID
}

case "$1" in
    start)
        test_config
        if [ -f $PID ] && kill -0 $(cat $PID) 2> /dev/null ; then
            echo "already running"
            exit 1
        fi
        log_daemon_msg "Starting $DAEMON_NAME" "$DAEMON_NAME"
        start
        log_end_msg $?
        ;;

    stop)
        log_daemon_msg "Stopping $DAEMON_NAME" "$DAEMON_NAME"
        stop
        log_end_msg $?
        ;;

    restart|force-reload)
        test_config
        log_daemon_msg "Restarting $DAEMON_NAME" "$DAEMON_NAME"
        stop
        sleep 1
        start
        log_end_msg $?
        ;;

    reload)
        test_config
        log_daemon_msg "Reloading $DAEMON_NAME configuration" "$DAEMON_NAME"
        reload
        log_end_msg $?
        ;;

    configtest|testconfig)
        log_daemon_msg "Testing $DAEMON_NAME configuration"
        if test_config ; then
            log_daemon_msg "$DAEMON_NAME"
        else
            exit $?
        fi
        log_end_msg $?
        ;;

    status)
        status_of_proc -p $PID "DAEMON" "$DAEMON_NAME"
        exit $?
        ;;

    *)
        echo "Usage: $0 {start|stop|restart|reload|force-reload|status|configtest}" >&2
        exit 1
        ;;
esac

exit 0
